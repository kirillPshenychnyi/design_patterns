#ifndef __VEHICLE_LOGGER_HPP__
#define __VEHICLE_LOGGER_HPP__

/***************************************************************************/

#include <iostream>
#include "IVisitor.hpp"

/***************************************************************************/

class Vehicle;

/***************************************************************************/

class CarLogger : public IVisitor
{

/**************************************************************************/

public:

/***************************************************************************/

	CarLogger(std::ostream & _stream )
		: m_targetStream(_stream)
	{}

/***************************************************************************/

public:

/***************************************************************************/

	void log(const Vehicle & _vehicle);

/***************************************************************************/

private:

/***************************************************************************/

	void visit(const Car & _car) override;

	void visit(const Bus & _car) override;

	void logCommonInfo(const Vehicle & _vehicle);

/***************************************************************************/

private:

/***************************************************************************/

	std::ostream & m_targetStream;

/***************************************************************************/

};


/***************************************************************************/

#endif // __VEHICLE_LOGGER_HPP__ 