#ifndef __CIRCLE_HPP__
#define __CIRCLE_HPP__

/***************************************************************************/

#include "igraphical_element.hpp"
#include "point.hpp"

/***************************************************************************/

class Circle : public IGraphicalElement
{

/***************************************************************************/

public:

/***************************************************************************/

	Circle( Point _center, double _radius)
		:	m_center(_center)
		,	m_radius(_radius)
	{}

	Point getCenter() const;

	void display() const override;

/***************************************************************************/

private:

/***************************************************************************/

	const Point m_center;

	const double m_radius;

/***************************************************************************/

};

/***************************************************************************/

#endif // !__CIRCLE_HPP__

/***************************************************************************/

inline Point 
Circle::getCenter() const
{
	return m_center;
}

/***************************************************************************/

inline void
Circle::display() const
{
	std::cout << "Displaying circle with radius " << m_radius << std::endl;

	std::cout << m_center;

}

/***************************************************************************/